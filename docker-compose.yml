
services:
# Databases - Um para cada serviço
  mysql-funcionario:
    image: mysql:8.0
    container_name: mysql-funcionario
    environment:
      MYSQL_ROOT_PASSWORD: 1234
      MYSQL_DATABASE: ms_funcionario
    ports:
      - "3307:3306"
    volumes:
      - mysql_funcionario_data:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 5s
      timeout: 20s
      retries: 10
    networks:
      - app-network

  mysql-helpdesk:
    image: mysql:8.0
    container_name: mysql-helpdesk
    environment:
      MYSQL_ROOT_PASSWORD: 1234
      MYSQL_DATABASE: ms_helpdesk
    ports:
      - "3308:3306"
    volumes:
      - mysql_helpdesk_data:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
    networks:
      - app-network

  mysql-security:
    image: mysql:8.0
    container_name: mysql-security
    environment:
      MYSQL_ROOT_PASSWORD: 1234
      MYSQL_DATABASE: ms_security
    ports:
      - "3309:3306"
    volumes:
      - mysql_security_data:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
    networks:
      - app-network

  mysql-email:
    image: mysql:8.0
    container_name: mysql-email
    environment:
      MYSQL_ROOT_PASSWORD: 1234
      MYSQL_DATABASE: ms_email
    ports:
      - "3310:3306"
    volumes:
      - mysql_email_data:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
    networks:
      - app-network

  # API Gateway
  api-gateway:
    build:
      context: ./apigateway
      dockerfile: Dockerfile
    container_name: api-gateway
    ports:
      - "8080:8080"
    environment:
      SPRING_PROFILES_ACTIVE: prod
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://eureka-server:8761/eureka
      API_SECURITY_TOKEN_SECRET: cb9404a187ec5b9d9e73af07cb02d13a2c6a24b03469dfb8dad96f84bed1898d
    networks:
      - app-network

  # API Funcionario (com CloudAMQP)
  api-funcionario:
    build:
      context: ./apifuncionario
      dockerfile: Dockerfile
    container_name: api-funcionario
    ports:
      - "8081:8080"
    environment:
      SPRING_PROFILES_ACTIVE: prod
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql-funcionario:3306/ms_funcionario
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: 1234
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://eureka-server:8761/eureka
      SPRING_RABBITMQ_ADDRESSES: amqps://azlgtuxj:HjCUvOPEQhfZBZj-0rVZ_oQFB5ekeDVd@seal.lmq.cloudamqp.com/azlgtuxj
      SPRING_RABBITMQ_SSL_ENABLED: "true"
    depends_on:
      - mysql-funcionario
    networks:
      - app-network

  # API HelpDesk (com CloudAMQP)
  api-helpdesk:
    build:
      context: ./apihelpdesk
      dockerfile: Dockerfile
    container_name: api-helpdesk
    ports:
      - "8082:8080"
    environment:
      SPRING_PROFILES_ACTIVE: prod
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql-helpdesk:3306/ms_helpdesk
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: 1234
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://eureka-server:8761/eureka
      SPRING_RABBITMQ_ADDRESSES: amqps://azlgtuxj:HjCUvOPEQhfZBZj-0rVZ_oQFB5ekeDVd@seal.lmq.cloudamqp.com/azlgtuxj
      SPRING_RABBITMQ_SSL_ENABLED: "true"
      FILE_UPLOAD_DIR: /app/uploads
    volumes:
      - uploads:/app/uploads
    depends_on:
      - mysql-helpdesk
    networks:
      - app-network

  # API Security (com CloudAMQP)
  api-security:
    build:
      context: ./apisecurity
      dockerfile: Dockerfile
    container_name: api-security
    ports:
      - "8083:8080"
    environment:
      SPRING_PROFILES_ACTIVE: prod
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql-security:3306/ms_security
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: 1234
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://eureka-server:8761/eureka
      SPRING_RABBITMQ_ADDRESSES: amqps://azlgtuxj:HjCUvOPEQhfZBZj-0rVZ_oQFB5ekeDVd@seal.lmq.cloudamqp.com/azlgtuxj
      SPRING_RABBITMQ_SSL_ENABLED: "true"
      API_SECURITY_TOKEN_SECRET: cb9d04a187ec5b9d9e73af07cb02d13a2c6a24b03469dfb8dad96f84bed1898d
    depends_on:
      - mysql-security
    networks:
      - app-network

  # API Email (com CloudAMQP)
  api-email:
    build:
      context: ./apiemail
      dockerfile: Dockerfile
    container_name: api-email
    ports:
      - "8084:8080"
    environment:
      SPRING_PROFILES_ACTIVE: prod
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql-email:3306/ms_email
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: 1234
      SPRING_MAIL_HOST: smtp.gmail.com
      SPRING_MAIL_PORT: 587
      SPRING_MAIL_USERNAME: seu-email@gmail.com
      SPRING_MAIL_PASSWORD: sua-senha
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://eureka-server:8761/eureka
      SPRING_RABBITMQ_ADDRESSES: amqps://azlgtuxj:HjCUvOPEQhfZBZj-0rVZ_oQFB5ekeDVd@seal.lmq.cloudamqp.com/azlgtuxj
      SPRING_RABBITMQ_SSL_ENABLED: "true"
    depends_on:
      - mysql-email
    networks:
      - app-network

# Volumes para persistência de dados
volumes:
  mysql_funcionario_data:
  mysql_helpdesk_data:
  mysql_security_data:
  mysql_email_data:
  uploads:

# Rede para comunicação entre serviços
networks:
  app-network:
    driver: bridge